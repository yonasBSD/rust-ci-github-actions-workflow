on:
  pull_request:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["Test with Code Coverage"]
    branches: [main]
    types:
      - completed

name: Cross Build

jobs:
  test:
    name: Test Platforms
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cargo test --all-features

  freebsd:
    name: FreBSD
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: FreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          envs: 'MYTOKEN MYTOKEN2'
          usesh: true
          sync: rsync
          copyback: false
          prepare: |
            pkg install -y curl rust-nightly

          run: |
            pwd
            ls -lah
            whoami
            env
            freebsd-version
            sysctl hw.model
            sysctl hw.ncpu
            sysctl hw.physmem
            sysctl hw.usermem
            cargo test --all-features

  openbsd:
    name: OpenBSD
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: OpenBSD
        uses: vmactions/openbsd-vm@v1
        with:
          envs: 'MYTOKEN MYTOKEN2'
          usesh: true
          sync: rsync
          copyback: false
          prepare: |
            pkg_add curl rust

          run: |
            pwd
            ls -lah
            whoami
            env
            freebsd-version
            sysctl hw.model
            sysctl hw.ncpu
            sysctl hw.physmem
            sysctl hw.usermem
            cargo test --all-features

  netbsd:
    name: NetBSD
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: NetBSD
        uses: vmactions/netbsd-vm@v1
        with:
          envs: 'MYTOKEN MYTOKEN2'
          usesh: true
          sync: rsync
          copyback: false
          prepare: |
            /usr/sbin/pkg_add pkgin
            pkgin install curl rust

          run: |
            pwd
            ls -lah
            whoami
            env
            freebsd-version
            sysctl hw.model
            sysctl hw.ncpu
            sysctl hw.physmem
            sysctl hw.usermem
            cargo test --all-features

  dragonflybsd:
    name: DragonflyBSD
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Dragonfly
        uses: vmactions/dragonflybsd-vm@v1
        with:
          envs: 'MYTOKEN MYTOKEN2'
          usesh: true
          sync: rsync
          copyback: false
          prepare: |
            pkg install -y curl rust-nightly

          run: |
            pwd
            ls -lah
            whoami
            env
            freebsd-version
            sysctl hw.model
            sysctl hw.ncpu
            sysctl hw.physmem
            sysctl hw.usermem
            cargo test --all-features

  alpine:
    name: Alpine
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Alpine Linux
        uses: jirutka/setup-alpine@v1
        with:
          branch: edge

      - name: Run tests
        run: |
          apk add cargo
          cargo test --all-features

  arch:
    name: Arch
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Arch Linux
        uses: RangHo/setup-arch@main
        with:
          packages: "rust"

      - name: Run tests
        run: |
          cargo test --all-features

# TODO:
# - OpenSUSE
# - Rocky Linux
# - Fedora
# - Gentoo
# - Slackware
